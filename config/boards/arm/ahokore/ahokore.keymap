/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {

behaviors {
    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping_term_ms = <300>;
        quick-tap-ms = <200>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
    };
    tm: thumbs_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "THUMBS_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        flavor = "tap-preferred";
        bindings = <&mo>, <&kp>;
    };

    combos {
        compatible = "zmk,combos";
        combo_del {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp DEL>;
            layers = <1>;
        };
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BKSP>;
            layers = <0 1>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
            layers = <0>;

        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
            layers = <0>;

        };
    };

};
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ------------------------------------------------------------------
// |  Q  |  D  |  R  |  W  |  B  |   |  J  |  F   |  U  |  P  |  '  |
// |  A  |  S  |  H  |  T  |  G  |   |  Y  |  N   |  E  |  O  |  I  |
// |  Z  |  X  |  M  |  C  |  V  |   |  K  |  L   |  ,  |  .  |  /  |
//             | GUI | LWR | SPC |   | ENT | RSE  | ALT |

                        bindings = <
   &kp Q      &kp D      &kp R       &kp W       &kp B    &kp J     &kp F        &kp U       &kp P        &kp SQT
   &hm LGUI A &hm LALT S &hm LCTRL H &hm LSHFT T &kp G    &kp Y     &hm RSHFT N  &hm RCTRL E &hm LALT O   &hm RGUI I
   &kp Z      &kp RALT X &kp M       &kp C       &kp V    &kp K     &kp L        &kp COMMA   &mt RALT DOT &kp FSLH
              &tm MEDR ESC &tm NAVR SPACE &tm MOUR TAB    &tm NSSL RET &tm NSL BSPC &tm FUNL DEL
                        >;
                };

                navr_layer {
                        label    = "NAVR";
                        bindings = <
   &trans   &trans   &trans    &trans    &trans          &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO
   &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &trans          &kp CAPS    &kp LEFT     &kp DOWN    &kp UP     &kp RIGHT
   &trans   &kp RALT &trans    &trans    &trans          &kp INS     &kp HOME     &kp PG_DN   &kp PG_UP  &kp END
                            &trans    &trans    &trans          &kp RET     &kp BSPC     &kp DEL
                        >;
                };
                mour_layer {
                        label    = "MOUR"; // apparently mouse is not supported... yet? for now this is a copy of NAVR
                        bindings = <
   &trans   &trans   &trans    &trans    &trans          &kp K_REDO  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO
   &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &trans          &kp CAPS    &kp LEFT     &kp DOWN    &kp UP     &kp RIGHT
   &trans   &kp RALT &trans    &trans    &trans          &kp INS     &kp HOME     &kp PG_DN   &kp PG_UP  &kp END
                            &trans    &trans    &trans          &kp RET     &kp BSPC     &kp DEL
                        >;
                };
                medr_layer {
                        label    = "MEDR";
                        bindings = <
   &trans   &trans   &trans    &trans    &trans          &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
   &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &trans          &out OUT_BLE  &trans           &trans        &trans        &trans
   &trans   &kp RALT &trans    &trans    &trans          &out OUT_USB  &kp C_PREV       &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT
                            &trans    &trans    &trans          &kp C_STOP    &kp C_PLAY_PAUSE &kp C_MUTE
                        >;
                };

                nsl_layer {
                        label    = "NSL";
                        bindings = <
   &kp LBKT  &kp N7 &kp N8 &kp N9 &kp RBKT               &trans  &trans    &trans    &trans   &trans
   &kp SEMI  &kp N4 &kp N5 &kp N6 &kp EQUAL              &trans  &kp LSHFT &kp LCTRL &kp LALT &kp LGUI
   &kp GRAVE &kp N1 &kp N2 &kp N3 &kp BSLH               &trans  &trans    &trans    &kp RALT &trans
                          &kp DOT &kp N0 &kp MINUS              &trans  &trans    &trans
                        >;
                };

                nssl_layer {
                        label    = "NSSL";
                        bindings = <
   &kp LBRC  &kp AMPS &kp STAR  &kp LPAR  &kp RBRC       &trans  &trans    &trans    &trans   &trans
   &kp COLON &kp DLLR &kp PRCNT &kp CARET &kp PLUS       &trans  &kp LSHFT &kp LCTRL &kp LALT &kp LGUI
   &kp TILDE &kp EXCL &kp AT    &kp HASH  &kp PIPE       &trans  &trans    &trans    &kp RALT &trans
                             &kp LPAR  &kp RPAR  &kp UNDER      &trans  &trans    &trans
                        >;
                };
                funl_layer {
                        label    = "NSSL";
                        bindings = <
   &kp F12 &kp F7 &kp F8  &kp F9 &kp PSCRN               &trans  &trans    &trans    &trans   &trans
   &kp F11 &kp F4 &kp F5  &kp F6 &kp SLCK                &trans  &kp LSHFT &kp LCTRL &kp LALT &kp LGUI
   &kp F10 &kp F1 &kp F2  &kp F3 &kp PAUSE_BREAK         &trans  &trans    &trans    &kp RALT &trans
                  &kp K_APP  &kp SPACE  &kp TAB                 &trans  &trans    &trans
                        >;
                };


        };
};
